"""more_constraints

Revision ID: e587e6b7627a
Revises: 57292186491c
Create Date: 2023-02-12 03:11:38.794915

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = 'e587e6b7627a'
down_revision = '57292186491c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('compost_npkdata', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('compost_npkdata', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_compost_npkdata_id'), 'compost_npkdata', ['id'], unique=False)
    op.add_column('garden_plant', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('garden_plant', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_garden_plant_id'), 'garden_plant', ['id'], unique=False)
    op.add_column('garden_raisedbed', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('garden_raisedbed', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_garden_raisedbed_id'), 'garden_raisedbed', ['id'], unique=False)
    op.add_column('garden_scheduledata', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('garden_scheduledata', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_garden_scheduledata_id'), 'garden_scheduledata', ['id'], unique=False)
    op.add_column('inventory_acquired', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('inventory_acquired', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_inventory_acquired_id'), 'inventory_acquired', ['id'], unique=False)
    op.add_column('inventory_item', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('inventory_item', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_inventory_item_id'), 'inventory_item', ['id'], unique=False)
    op.add_column('inventory_liquidated', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('inventory_liquidated', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_inventory_liquidated_id'), 'inventory_liquidated', ['id'], unique=False)
    op.add_column('location_gpscoords', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('location_gpscoords', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_location_gpscoords_id'), 'location_gpscoords', ['id'], unique=False)
    op.create_unique_constraint(None, 'location_gpscoords', ['latitude', 'longitude', 'elevation'])
    op.add_column('mqtt_message', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('mqtt_message', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_mqtt_message_id'), 'mqtt_message', ['id'], unique=False)
    op.add_column('pantry_container', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('pantry_container', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_pantry_container_id'), 'pantry_container', ['id'], unique=False)
    op.add_column('pantry_openedgood', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('pantry_openedgood', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_pantry_openedgood_id'), 'pantry_openedgood', ['id'], unique=False)
    op.add_column('pantry_stockedgood', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('pantry_stockedgood', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_pantry_stockedgood_id'), 'pantry_stockedgood', ['id'], unique=False)
    op.add_column('sensors_data', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('sensors_data', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_sensors_data_id'), 'sensors_data', ['id'], unique=False)
    op.add_column('sensors_sensor', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('sensors_sensor', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_sensors_sensor_id'), 'sensors_sensor', ['id'], unique=False)
    op.add_column('tasks_action', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('tasks_action', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_tasks_action_id'), 'tasks_action', ['id'], unique=False)
    op.add_column('tasks_block', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('tasks_block', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_tasks_block_id'), 'tasks_block', ['id'], unique=False)
    op.add_column('tracker_location', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('tracker_location', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_tracker_location_id'), 'tracker_location', ['id'], unique=False)
    op.add_column('weather_forecast', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('weather_forecast', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_weather_forecast_id'), 'weather_forecast', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_weather_forecast_id'), table_name='weather_forecast')
    op.drop_column('weather_forecast', 'created_at')
    op.drop_column('weather_forecast', 'updated_at')
    op.drop_index(op.f('ix_tracker_location_id'), table_name='tracker_location')
    op.drop_column('tracker_location', 'created_at')
    op.drop_column('tracker_location', 'updated_at')
    op.drop_index(op.f('ix_tasks_block_id'), table_name='tasks_block')
    op.drop_column('tasks_block', 'created_at')
    op.drop_column('tasks_block', 'updated_at')
    op.drop_index(op.f('ix_tasks_action_id'), table_name='tasks_action')
    op.drop_column('tasks_action', 'created_at')
    op.drop_column('tasks_action', 'updated_at')
    op.drop_index(op.f('ix_sensors_sensor_id'), table_name='sensors_sensor')
    op.drop_column('sensors_sensor', 'created_at')
    op.drop_column('sensors_sensor', 'updated_at')
    op.drop_index(op.f('ix_sensors_data_id'), table_name='sensors_data')
    op.drop_column('sensors_data', 'created_at')
    op.drop_column('sensors_data', 'updated_at')
    op.drop_index(op.f('ix_pantry_stockedgood_id'), table_name='pantry_stockedgood')
    op.drop_column('pantry_stockedgood', 'created_at')
    op.drop_column('pantry_stockedgood', 'updated_at')
    op.drop_index(op.f('ix_pantry_openedgood_id'), table_name='pantry_openedgood')
    op.drop_column('pantry_openedgood', 'created_at')
    op.drop_column('pantry_openedgood', 'updated_at')
    op.drop_index(op.f('ix_pantry_container_id'), table_name='pantry_container')
    op.drop_column('pantry_container', 'created_at')
    op.drop_column('pantry_container', 'updated_at')
    op.drop_index(op.f('ix_mqtt_message_id'), table_name='mqtt_message')
    op.drop_column('mqtt_message', 'created_at')
    op.drop_column('mqtt_message', 'updated_at')
    op.drop_constraint(None, 'location_gpscoords', type_='unique')
    op.drop_index(op.f('ix_location_gpscoords_id'), table_name='location_gpscoords')
    op.drop_column('location_gpscoords', 'created_at')
    op.drop_column('location_gpscoords', 'updated_at')
    op.drop_index(op.f('ix_inventory_liquidated_id'), table_name='inventory_liquidated')
    op.drop_column('inventory_liquidated', 'created_at')
    op.drop_column('inventory_liquidated', 'updated_at')
    op.drop_index(op.f('ix_inventory_item_id'), table_name='inventory_item')
    op.drop_column('inventory_item', 'created_at')
    op.drop_column('inventory_item', 'updated_at')
    op.drop_index(op.f('ix_inventory_acquired_id'), table_name='inventory_acquired')
    op.drop_column('inventory_acquired', 'created_at')
    op.drop_column('inventory_acquired', 'updated_at')
    op.drop_index(op.f('ix_garden_scheduledata_id'), table_name='garden_scheduledata')
    op.drop_column('garden_scheduledata', 'created_at')
    op.drop_column('garden_scheduledata', 'updated_at')
    op.drop_index(op.f('ix_garden_raisedbed_id'), table_name='garden_raisedbed')
    op.drop_column('garden_raisedbed', 'created_at')
    op.drop_column('garden_raisedbed', 'updated_at')
    op.drop_index(op.f('ix_garden_plant_id'), table_name='garden_plant')
    op.drop_column('garden_plant', 'created_at')
    op.drop_column('garden_plant', 'updated_at')
    op.drop_index(op.f('ix_compost_npkdata_id'), table_name='compost_npkdata')
    op.drop_column('compost_npkdata', 'created_at')
    op.drop_column('compost_npkdata', 'updated_at')
    # ### end Alembic commands ###
