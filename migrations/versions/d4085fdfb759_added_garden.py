"""added_garden

Revision ID: d4085fdfb759
Revises: ec3fa616e99b
Create Date: 2023-02-21 10:06:51.186361

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = "d4085fdfb759"
down_revision = "ec3fa616e99b"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "garden_raisedbed",
        sa.Column("gpscoords_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["gpscoords_id"],
            ["location_gpscoords.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_garden_raisedbed_id"), "garden_raisedbed", ["id"], unique=False
    )
    op.create_table(
        "garden_scheduledata",
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("germinated", sa.Interval(), nullable=False),
        sa.Column("planted", sa.Interval(), nullable=False),
        sa.Column("harvested", sa.Interval(), nullable=False),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["inventory_item.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_garden_scheduledata_id"), "garden_scheduledata", ["id"], unique=False
    )
    op.create_table(
        "garden_crop",
        sa.Column("raisedbed_id", sa.Integer(), nullable=False),
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["inventory_item.id"],
        ),
        sa.ForeignKeyConstraint(
            ["raisedbed_id"],
            ["garden_raisedbed.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_garden_crop_id"), "garden_crop", ["id"], unique=False)
    op.create_table(
        "garden_action",
        sa.Column("crop_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("at", sa.DateTime(), nullable=False),
        sa.Column("stage", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["crop_id"],
            ["garden_crop.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_garden_action_id"), "garden_action", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_garden_action_id"), table_name="garden_action")
    op.drop_table("garden_action")
    op.drop_index(op.f("ix_garden_crop_id"), table_name="garden_crop")
    op.drop_table("garden_crop")
    op.drop_index(op.f("ix_garden_scheduledata_id"), table_name="garden_scheduledata")
    op.drop_table("garden_scheduledata")
    op.drop_index(op.f("ix_garden_raisedbed_id"), table_name="garden_raisedbed")
    op.drop_table("garden_raisedbed")
    # ### end Alembic commands ###
